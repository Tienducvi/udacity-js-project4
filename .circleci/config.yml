version: 2.1
orbs:
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  frontend:
    working_directory: ~/app/udagram/udagram-frontend
    executor: node/default
    steps: 
      - checkout:
          path: ~/app
      - node/install:
          install-yarn: true
          node-version: '16.13'
      - run: node --version
      - node/install-packages:
          app-dir: ~/app/udagram/udagram-frontend
      - run:
          name: Build Frontend
          command: npm run build
      - aws-cli/install
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: Deploy Frontend
          command: aws s3 cp --recursive  ./www s3://vitieubucket123456/
  server:
    working_directory: ~/app/udagram/udagram-api
    executor: node/default
    steps:
      - checkout:
          path: ~/app
      - node/install-packages:
          app-dir: ~/app/udagram/udagram-api
      - aws-cli/install
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: Initialize Elastic Beanstalk Application
          command: |
            eb init udagram-api-last-last-last --region $AWS_REGION --platform node.js
            eb use udagram-api-dev-last-last || eb create udagram-api-dev-last-last --platform node.js --region $AWS_REGION
      - run:
          name: Set Environment Variables in Elastic Beanstalk
          command: |
            eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
              POSTGRES_HOST=$POSTGRES_HOST \
              POSTGRES_DB=$POSTGRES_DB \
              AWS_BUCKET=$AWS_BUCKET \
              S3_BUCKET_FRONTEND=$S3_BUCKET_FRONTEND \
              AWS_REGION=$AWS_REGION \
              JWT_SECRET=$JWT_SECRET \
              URL=$URL \
              PORT=$PORT \
              USERNAME=$USERNAME \
              AWS_ACCESS_KEY=$AWS_ACCESS_KEY \
              AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - run:
          name: Deploy Server
          command: npm run deploy
workflows:
  build_and_deploy:
    jobs:
      - frontend:
          filters:
            branches:
              only:
                - main
      - server:
          filters:
            branches:
              only:
                - main
